import React, { useState, useEffect } from 'react';
import { Modal, Col, Row, Form, Button } from 'react-bootstrap';
import { addVisit } from '../../services/VisitsService';
import axios from 'axios';
import Select from 'react-select';

const AddVisitModal = (props) => {
  const [formData, setFormData] = useState({
    visitor: '',
    host: '',
    visit_type: '',
    purpose: '',
  });

  const [visitorOptions, setVisitorOptions] = useState([]);

  const handleChange = (selectedVisitor) => {
    setFormData({
      ...formData,
      visitor: selectedVisitor.value,
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    addVisit(formData)
      .then(
        (result) => {
          alert(result);
          props.setUpdated(true);
        },
        (error) => {
          console.error('Failed to Add Visit:', error);
          alert('Failed to Add Visit');
        }
      );
  };

  useEffect(() => {
    fetchVisitorOptions();
  }, []);

  const fetchVisitorOptions = async () => {
    try {
      const response = await axios.get('http://127.0.0.1:8000/visitors/'); // Replace with your actual API endpoint
      const options = response.data.map((visitor) => ({
        value: visitor.Name,
      }));
      setVisitorOptions(options);
    } catch (error) {
      console.error('Error fetching visitor names:', error);
    }
  };

  return (
    <div className="container">
      <Modal {...props} size="lg" aria-labelledby="contained-modal-title-vcenter" centered>
        <Modal.Header closeButton>
          <Modal.Title id="contained-modal-title-vcenter">Fill In Visit Information</Modal.Title>
        </Modal.Header>
        <Modal.Body>
          <Row>
            <Col sm={6}>
              <Form onSubmit={handleSubmit}>
                <Form.Group controlId="visitor">
                  <Form.Label>Visitor</Form.Label>
                  <Select
                    options={visitorOptions}
                    value={visitorOptions.find((opt) => opt.value === formData.visitor)}
                    onChange={handleChange}
                    placeholder="Select Visitor"
                    isSearchable
                    required
                  />
                </Form.Group>

                <Form.Group controlId="host">
                  <Form.Label>Host</Form.Label>
                  <Form.Control type="text" name="host" onChange={(e) => setFormData({ ...formData, host: e.target.value })} required placeholder="" />
                </Form.Group>

                <Form.Group controlId="visit_type">
                  <Form.Label>Visit Type</Form.Label>
                  <Form.Control as="select" name="visit_type" onChange={(e) => setFormData({ ...formData, visit_type: e.target.value })} required>
                    <option value="">Select Visit Type</option>
                    <option value="Contractor">Contractor</option>
                    <option value="Delivery">Delivery</option>
                    <option value="Visitor">Visitor</option>
                  </Form.Control>
                </Form.Group>

                <Form.Group controlId="purpose">
                  <Form.Label>Purpose</Form.Label>
                  <Form.Control as="select" name="purpose" onChange={(e) => setFormData({ ...formData, purpose: e.target.value })} required>
                    <option value="">Select Purpose</option>
                    <option value="Personal">Personal</option>
                    <option value="Official">Official</option>
                  </Form.Control>
                </Form.Group>

                <Form.Group>
                  <p></p>
                  <Button variant="primary" type="submit">
                    Submit
                  </Button>
                </Form.Group>
              </Form>
            </Col>
          </Row>
        </Modal.Body>
        <Modal.Footer>
          <Button variant="danger" onClick={props.onHide}>
            Close
          </Button>
        </Modal.Footer>
      </Modal>
    </div>
  );
};

export default AddVisitModal;
